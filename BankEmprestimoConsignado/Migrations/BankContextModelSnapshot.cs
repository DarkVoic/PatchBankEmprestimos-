// <auto-generated />
using System;
using BankEmprestimoConsignado.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BankEmprestimoConsignado.Migrations
{
    [DbContext(typeof(BankContext))]
    partial class BankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasCharSet("utf8mb4")
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("BankEmprestimoConsignado.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCLIENTE");

                    b.Property<double>("Cpf")
                        .HasColumnType("double")
                        .HasColumnName("CPF");

                    b.Property<double>("Margem")
                        .HasPrecision(3, 2)
                        .HasColumnType("double")
                        .HasColumnName("MARGEM");

                    b.Property<double>("MargemCartao")
                        .HasPrecision(3, 2)
                        .HasColumnType("double")
                        .HasColumnName("MARGEM_CARTAO");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime")
                        .HasColumnName("NASCIMENTO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("NOME");

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("PROFISSAO");

                    b.Property<double>("Salario")
                        .HasPrecision(10, 2)
                        .HasColumnType("double")
                        .HasColumnName("SALARIO");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.HasKey("IdCliente")
                        .HasName("PRIMARY");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("BankEmprestimoConsignado.Models.Emprestimo", b =>
                {
                    b.Property<int>("IdEmprestimo")
                        .HasColumnType("int")
                        .HasColumnName("idEMPRESTIMO");

                    b.Property<DateTime>("DataVenc")
                        .HasColumnType("datetime")
                        .HasColumnName("DATA_VENC");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCLIENTE");

                    b.Property<int>("QtdParcela")
                        .HasColumnType("int")
                        .HasColumnName("QTD_PARCELA");

                    b.Property<int>("QtdParcelaRest")
                        .HasColumnType("int")
                        .HasColumnName("QTD_PARCELA_REST");

                    b.Property<int>("StatusEmprest")
                        .HasColumnType("int")
                        .HasColumnName("STATUS_EMPREST");

                    b.Property<double>("TaxaJuros")
                        .HasPrecision(3, 2)
                        .HasColumnType("double")
                        .HasColumnName("TAXA_JUROS");

                    b.Property<int>("TipoEmprest")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_EMPREST");

                    b.Property<double>("ValorEmprestimo")
                        .HasColumnType("double(10,2)")
                        .HasColumnName("VALOR_EMPRESTIMO");

                    b.Property<double>("ValorLiberado")
                        .HasColumnType("double(10,2)")
                        .HasColumnName("VALOR_LIBERADO");

                    b.Property<double>("ValorParcela")
                        .HasColumnType("double(10,2)")
                        .HasColumnName("VALOR_PARCELA");

                    b.HasKey("IdEmprestimo")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCliente" }, "fk_EMPRESTIMO_CLIENTE_idx");

                    b.ToTable("emprestimos");
                });

            modelBuilder.Entity("BankEmprestimoConsignado.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuarios")
                        .HasColumnType("int")
                        .HasColumnName("idUSUARIOS");

                    b.Property<string>("Celular")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CELULAR");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCLIENTE");

                    b.Property<byte[]>("Senha")
                        .HasMaxLength(6)
                        .HasColumnType("varbinary(6)")
                        .HasColumnName("SENHA");

                    b.Property<string>("User")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("USER");

                    b.HasKey("IdUsuarios")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "User" }, "USER_UNIQUE")
                        .IsUnique();

                    b.HasIndex(new[] { "IdCliente" }, "fk_USUARIOS_CLIENTES1_idx");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser<string>", b =>
                {
                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Id")
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.ToTable("IdentityUser<string>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.ToTable("IdentityUserClaim<string>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("longtext");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.ToTable("IdentityUserLogin<string>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.ToTable("IdentityUserRole<string>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.ToTable("IdentityUserToken<string>");
                });

            modelBuilder.Entity("BankEmprestimoConsignado.Models.Emprestimo", b =>
                {
                    b.HasOne("BankEmprestimoConsignado.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Emprestimos")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("fk_EMPRESTIMO_CLIENTE")
                        .IsRequired();

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("BankEmprestimoConsignado.Models.Usuario", b =>
                {
                    b.HasOne("BankEmprestimoConsignado.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("fk_USUARIOS_CLIENTES1")
                        .IsRequired();

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("BankEmprestimoConsignado.Models.Cliente", b =>
                {
                    b.Navigation("Emprestimos");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
